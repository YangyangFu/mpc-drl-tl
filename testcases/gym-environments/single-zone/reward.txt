// calculate reward and penalty
PyObject* getReward(const double* state, const double* mass_rate, const double* state_prime, int num_zone, double max_action, double delCtl){
  PyObject *pCost, *pPenalty, *pReward;
  double cost[num_zone], penalty[num_zone], overshoot[num_zone], undershoot[num_zone];
  // calculate cost and penalty for each zone
  int t, k;
  // comfort zone upper/lower bound
  double T_upper[24] = {24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0};
  double T_lower[24] = {19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0};
  double alpha_up = 200.0, alpha_low = 200.0;
  t = (int)(state_prime[0]);
  t = (t%86400)/3600; // hour index 0~23
  // calculate penalty for each zone
  for(k = 0; k < num_zone; k++){
      overshoot[k] = max(state_prime[1+k] - T_upper[t] , 0.0);
      undershoot[k] = max(T_lower[t] - state_prime[1+k] , 0.0);
      penalty[k] = - alpha_up * overshoot[k] - alpha_low * undershoot[k];
  }

  // grid price
  double p_g[24] = {0.0640, 0.0640, 0.0640, 0.0640, 0.0640, 0.0640, 0.0640, 0.0640, 0.1391, 0.1391, 0.1391, 0.1391, 0.3548, 0.3548, 0.3548, 0.3548, 0.3548, 0.3548, 0.1391, 0.1391, 0.1391, 0.1391, 0.1391, 0.0640};
  t = (int)(state[0]);
  t = (t%86400)/3600; // hour index 0~23
  double c1 = -6.06e-13, c2 = 6.73e-8, c3 = -1.2e-3, c4 = 59.2; // electricit energy coefficients
  double ac_power = 100.0;                                      // air conditioning power KW
  double U_upBound = max_action * num_zone;                     // bounds for control input   
  // double U_lowBound = 0.0;  
  // configure fan energy                     
  double fa = 53303.0/U_upBound;
  double power, e_g, u, price, total_cost;
  u = sum(mass_rate, num_zone);
  power = 2.17*(c1*pow(fa*u+10367,3.0) + c2*pow(fa*u+10367,2.0) + c3*(fa*u+10367) + c4 - 53.3)*ac_power/100; // KW
  e_g = power * delCtl/3600.0;                                  // KWh 
  price = p_g[t];
  total_cost = - price * e_g; 
  for(k = 0; k < num_zone; k++)
      cost[k] = total_cost * mass_rate[k]/(u+1e-6); 

  // create Python lists
  pCost = createListFromDblArray(cost,num_zone);
  pPenalty = createListFromDblArray(penalty,num_zone);
  pReward = PyList_New(2);
  PyList_SetItem(pReward,0,pCost);
  PyList_SetItem(pReward,1,pPenalty);
  return pReward;
}